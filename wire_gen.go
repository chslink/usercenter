// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"usercenter/bc"
	"usercenter/bc/greeter"
	"usercenter/config"
	"usercenter/pkg"
	"usercenter/pkg/server"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(configConfig *config.Config, logger log.Logger) (*kratos.App, func(), error) {
	serverConfig, err := pkg.CopyServerConfig(configConfig)
	if err != nil {
		return nil, nil, err
	}
	grpcServer := server.NewGRPCServer(serverConfig, logger)
	httpServer := server.NewHTTPServer(serverConfig, logger)
	greeterGreeter := greeter.NewGreeter()
	loader := bc.LoadServices(httpServer, grpcServer, logger, greeterGreeter)
	app := newApp(logger, grpcServer, httpServer, loader)
	return app, func() {
	}, nil
}
